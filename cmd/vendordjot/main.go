package main

import (
	"fmt"
	"os"
	"strings"
)

const OutPath = "blogfs/djot.lua"

var LuaModules = []string{
	//"djot",
	//"djot.ast",
	//"djot.attributes",
	//"djot.block",
	//"djot.emoji",
	//"djot.html",
	//"djot.inline",
	//"djot.json",
	//"djot.match",
	"djot.attributes",
	"djot.inline",
	"djot.block",
	"djot.ast",
	"djot.emoji",
	"djot.html",
	"djot.filter",
	"djot.json",
	"djot",
}

func main() {

	outfile, err := os.Create(OutPath)
	check(err)
	defer outfile.Close()

	_, err = outfile.WriteString(
		`-- Autogenerated with "go run ./cmd/vendordjot". Do not edit.
-- https://github.com/jgm/djot/blob/main/LICENSE
-- Copyright (C) 2022 John MacFarlane
--
-- Permission is hereby granted, free of charge, to any person obtaining
-- a copy of this software and associated documentation files (the
-- "Software"), to deal in the Software without restriction, including
-- without limitation the rights to use, copy, modify, merge, publish,
-- distribute, sublicense, and/or sell copies of the Software, and to
-- permit persons to whom the Software is furnished to do so, subject to
-- the following conditions:
--
-- The above copyright notice and this permission notice shall be included
-- in all copies or substantial portions of the Software.
--
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-- EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-- MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
-- IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
-- CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
-- TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
-- SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
`)
	check(err)

	for _, module := range LuaModules {
		fmt.Fprintf(outfile, "package.preload[\"%s\"] = function()\n", module)
		luaPath := fmt.Sprintf("djot/%s.lua", strings.ReplaceAll(module, ".", "/"))
		luaContent, err := os.ReadFile(luaPath)
		check(err)
		_, err = outfile.Write(luaContent)
		check(err)
		outfile.WriteString("\nend\n\n")
	}

	_, err = outfile.WriteString(
		`local djot = require("djot")
function djot_to_html (input)
    local djot = require("djot")
    local doc = djot.parse(input)
    local html = djot.render_html(doc)
    return html
end
`)
	check(err)
}

func check(err error) {
	if err != nil {
		panic(err)
	}
}
